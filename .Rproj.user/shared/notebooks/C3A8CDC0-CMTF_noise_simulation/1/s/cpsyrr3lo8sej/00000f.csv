"0","R = 3"
"0","I = 50"
"0","J = 50"
"0","K = 50"
"0","L = 50"
"0","modes = list(c(1,2,3), c(1,4))"
"0",""
"0","A = array(rnorm(I*R), c(I, R))  # shared subject mode"
"0","B = array(rnorm(J*R), c(J, R))  # distinct feature mode of X1"
"0","C = array(rnorm(K*R), c(K, R))  # distinct condition mode of X1"
"0","D = array(rnorm(L*R), c(L, R))  # distinct feature mode of X2"
"0",""
"0","df1 = as.tensor(reinflateTensor(A, B, C))"
"0","df2 = as.tensor(reinflateMatrix(A, D))"
"0",""
"0","df1_noise = as.tensor(array(rnorm(I*J*K), c(I,J,K)))"
"0","df2_noise = as.tensor(array(rnorm(I*L), c(I,L)))"
"0",""
"0","X1_010 = df1 + 0.10 * df1_noise * fnorm(df1) / fnorm(df1_noise)"
"0","X1_025 = df1 + 0.25 * df1_noise * fnorm(df1) / fnorm(df1_noise)"
"0","X1_035 = df1 + 0.35 * df1_noise * fnorm(df1) / fnorm(df1_noise)"
"0",""
"0","X2_010 = df2 + 0.10 * df2_noise * fnorm(df2) / fnorm(df2_noise)"
"0","X2_025 = df2 + 0.25 * df2_noise * fnorm(df2) / fnorm(df2_noise)"
"0","X2_035 = df2 + 0.35 * df2_noise * fnorm(df2) / fnorm(df2_noise)"
"0",""
"0","Z_010 = setupCMTFdata(list(X1_010@data, X2_010@data), modes, normalize=FALSE)"
"0","Z_025 = setupCMTFdata(list(X1_025@data, X2_025@data), modes, normalize=FALSE)"
"0","Z_035 = setupCMTFdata(list(X1_035@data, X2_035@data), modes, normalize=FALSE)"
